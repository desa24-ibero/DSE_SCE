$PBExportHeader$tiene_adeudos_n_tr.srf
global type tiene_adeudos_n_tr from function_object
end type

forward prototypes
global function integer tiene_adeudos_n_tr (long al_cuenta, n_tr atr_trans)
end prototypes

global function integer tiene_adeudos_n_tr (long al_cuenta, n_tr atr_trans);//
// 		Nombre	tiene_adeudos
// 		Recibe	al_cuenta,atr_trans
// 		Regresa	1	si el alumno al_cuenta tiene adeudos 
// 					0	el alumno al_cuenta no tiene adeudos 
// 					-1	error de comunicacion
// 					FMC06051999
//
// 		Modificación para que reciba una transacción de PFC
// 

uo_administrador_liberacion luo_administrador_liberacion
string ls_nombre_datastore, ls_control_correcto
int li_res, li_ret
DataStore lds_adeudos_por_cuenta

lds_adeudos_por_cuenta = Create DataStore
ls_nombre_datastore = "d_adeudos_por_cuenta_sit"

//luo_administrador_liberacion = CREATE uo_administrador_liberacion
//IF luo_administrador_liberacion.of_liberacion_vigente("SIT") THEN
//	IF luo_administrador_liberacion.of_obten_control_correcto("SIT", "control_escolar",ls_nombre_datastore,"datawindow", ls_control_correcto) THEN
//		ls_nombre_datastore = ls_control_correcto
//	END IF
//END IF

lds_adeudos_por_cuenta.DataObject = ls_nombre_datastore
lds_adeudos_por_cuenta.SetTransObject(atr_trans)
li_res = lds_adeudos_por_cuenta.Retrieve(al_cuenta)
if li_res > 0 then
	li_ret = 1
elseif li_res = 0 then
	li_ret = 0
else
	li_ret = -1
	messagebox("Error de Comunicación","Error con la consulta de adeudos BD. Favor de intentar nuevamente", None!)
end if
Destroy lds_adeudos_por_cuenta
Destroy luo_administrador_liberacion
return li_ret

end function

