$PBExportHeader$f_obten_grupo_que_asimila.srf
global type f_obten_grupo_que_asimila from function_object
end type

forward prototypes
global function boolean f_obten_grupo_que_asimila (long al_cve_mat, string as_gpo, integer ai_periodo, integer ai_anio, ref long al_cve_mat_asim, ref string as_gpo_asim)
end prototypes

global function boolean f_obten_grupo_que_asimila (long al_cve_mat, string as_gpo, integer ai_periodo, integer ai_anio, ref long al_cve_mat_asim, ref string as_gpo_asim);long ll_cve_mat
integer li_codigo_sql
string ls_mensaje_sql, ls_gpo
long ll_cuenta

SELECT dbo.grupos.cve_asimilada,
		dbo.grupos.gpo_asimilado
INTO	:ll_cve_mat,
		:ls_gpo
FROM	dbo.grupos
WHERE dbo.grupos.cve_mat = :al_cve_mat
AND	dbo.grupos.gpo = :as_gpo
AND	dbo.grupos.periodo = :ai_periodo
AND	dbo.grupos.anio = :ai_anio
USING gtr_sce;

li_codigo_sql = gtr_sce.SqlCode
ls_mensaje_sql = gtr_sce.SqlErrText

if li_codigo_sql = 100 or isnull(ll_cve_mat)  then
	return false	
elseif li_codigo_sql = -1 then
	MessageBox("Error al consultar grupos que asimilan", ls_mensaje_sql)
	return false
end if

al_cve_mat_asim =  ll_cve_mat 
as_gpo_asim = ls_gpo 

return true

end function

