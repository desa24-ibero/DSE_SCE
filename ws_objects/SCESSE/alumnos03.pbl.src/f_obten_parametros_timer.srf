$PBExportHeader$f_obten_parametros_timer.srf
global type f_obten_parametros_timer from function_object
end type

forward prototypes
global function integer f_obten_parametros_timer (string as_classname, ref long al_minutos, ref long al_segundos, ref long al_num_intentos)
end prototypes

global function integer f_obten_parametros_timer (string as_classname, ref long al_minutos, ref long al_segundos, ref long al_num_intentos);//f_obten_parametros_timer
//Recibe:
//		as_classname		string
//Devuelve
//		al_minutos			long
//		al_segundos			long
//		al_num_intentos	long

long ll_minutos, ll_num_intentos
integer  li_codigo_sql
string ls_mensaje_sql

SELECT dbo.parametros_timer.minutos,
		dbo.parametros_timer.num_intentos
INTO	:ll_minutos,
		:ll_num_intentos
FROM	dbo.parametros_timer
WHERE dbo.parametros_timer.classname = :as_classname
USING gtr_sce;

li_codigo_sql = gtr_sce.SqlCode
ls_mensaje_sql = gtr_sce.SqlErrText

if li_codigo_sql = 100 or isnull(ll_minutos) then
	return 0
elseif li_codigo_sql = -1 then
	MessageBox("Error al consultar parametros_timer", ls_mensaje_sql)
	return 0
end if

if isnull(ll_num_intentos) then ll_num_intentos = 3

al_minutos = ll_minutos

al_segundos = ll_minutos*60

al_num_intentos =ll_num_intentos

return li_codigo_sql

end function

