$PBExportHeader$f_cuenta_veces_cursada.srf
global type f_cuenta_veces_cursada from function_object
end type

forward prototypes
global function long f_cuenta_veces_cursada (long al_cuenta, long al_cve_mat, integer ai_cve_carrera, integer ai_cve_plan)
end prototypes

global function long f_cuenta_veces_cursada (long al_cuenta, long al_cve_mat, integer ai_cve_carrera, integer ai_cve_plan);//f_cuenta_veces_cursada
//Cuenta el numero de veces que se ha cursado una materia
//Recibe		al_cuenta			long
//				al_cve_mat			long
//				ai_cve_carrera		integer
//				ai_cve_plan			integer

integer li_codigo_sql
string ls_mensaje_sql
long ll_num_veces
datastore lds_datastore


if al_cve_mat= 0 then
	return 0
end if

SELECT count(*)
INTO	:ll_num_veces
FROM	dbo.historico
WHERE dbo.historico.cuenta = :al_cuenta
AND   dbo.historico.cve_mat = :al_cve_mat
AND	dbo.historico.cve_carrera = :ai_cve_carrera
AND	dbo.historico.cve_plan = :ai_cve_plan
USING gtr_sce;

li_codigo_sql = gtr_sce.SqlCode
ls_mensaje_sql = gtr_sce.SqlErrText

if li_codigo_sql = 100 or isnull(ll_num_veces) then
	return 0
elseif li_codigo_sql = -1 then
	MessageBox("Error al contar historico", ls_mensaje_sql)
	return 0
end if

return ll_num_veces

end function

