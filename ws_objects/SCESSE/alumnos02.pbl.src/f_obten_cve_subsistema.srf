$PBExportHeader$f_obten_cve_subsistema.srf
global type f_obten_cve_subsistema from function_object
end type

forward prototypes
global function integer f_obten_cve_subsistema (long al_cuenta, long al_cve_carrera, integer ai_cve_plan)
end prototypes

global function integer f_obten_cve_subsistema (long al_cuenta, long al_cve_carrera, integer ai_cve_plan);//f_obten_cve_subsistema
//Recibe:		al_cuenta			long
//					al_cve_carrera		long
//					ai_cve_plan			integer

integer li_codigo_sql
string ls_mensaje_sql
integer li_activo, li_num_aprobadas, li_cve_subsistema

SELECT dbo.academicos.cve_subsistema
INTO	:li_cve_subsistema
FROM	dbo.academicos
WHERE dbo.academicos.cuenta = :al_cuenta
AND	dbo.academicos.cve_carrera = :al_cve_carrera
AND	dbo.academicos.cve_plan = :ai_cve_plan
USING gtr_sce;

li_codigo_sql = gtr_sce.SqlCode
ls_mensaje_sql = gtr_sce.SqlErrText

if li_codigo_sql = 100  then
	MessageBox("El alumno ["+string(al_cuenta)+"-"+obten_digito(al_cuenta)+" * "+string(al_cve_carrera) +" * "+string(ai_cve_plan)+"]escrito no existe", ls_mensaje_sql)
	return -1
elseif li_codigo_sql = -1 then
	MessageBox("Error al consultar academicos por subsistema", ls_mensaje_sql)
	return li_codigo_sql
else
	return li_cve_subsistema
end if


end function

