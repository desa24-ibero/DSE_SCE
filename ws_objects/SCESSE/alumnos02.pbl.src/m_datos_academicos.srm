$PBExportHeader$m_datos_academicos.srm
forward
global type m_datos_academicos from m_menu
end type
end forward

global type m_datos_academicos from m_menu
end type
global m_datos_academicos m_datos_academicos

on m_datos_academicos.create
m_datos_academicos=this
call super::create
end on

on m_datos_academicos.destroy
call super::destroy
end on

type m_archivo from m_menu`m_archivo within m_datos_academicos
end type

on m_archivo.create
call super::create
end on

on m_archivo.destroy
call super::destroy
end on

type m_leer from m_menu`m_leer within m_archivo
end type

on m_leer.create
call super::create
end on

on m_leer.destroy
call super::destroy
end on

type m_salvar from m_menu`m_salvar within m_archivo
end type

on m_salvar.create
call super::create
end on

on m_salvar.destroy
call super::destroy
end on

type m_configurarimpresora from m_menu`m_configurarimpresora within m_archivo
end type

on m_configurarimpresora.create
call super::create
end on

on m_configurarimpresora.destroy
call super::destroy
end on

type m_imprimir from m_menu`m_imprimir within m_archivo
end type

event m_imprimir::clicked;call super::clicked;//open(w_prev_datos_academicos)
end event

on m_imprimir.create
call super::create
this.visible = false
end on

on m_imprimir.destroy
call super::destroy
end on

type m_- from m_menu`m_- within m_archivo
end type

on m_-.create
call super::create
end on

on m_-.destroy
call super::destroy
end on

type m_salir from m_menu`m_salir within m_archivo
end type

on m_salir.create
call super::create
end on

on m_salir.destroy
call super::destroy
end on

type m_edicion from m_menu`m_edicion within m_datos_academicos
end type

on m_edicion.create
call super::create
end on

on m_edicion.destroy
call super::destroy
end on

type m_deshacer from m_menu`m_deshacer within m_edicion
end type

on m_deshacer.create
call super::create
end on

on m_deshacer.destroy
call super::destroy
end on

type m_cortar from m_menu`m_cortar within m_edicion
end type

on m_cortar.create
call super::create
end on

on m_cortar.destroy
call super::destroy
end on

type m_copiar from m_menu`m_copiar within m_edicion
end type

on m_copiar.create
call super::create
end on

on m_copiar.destroy
call super::destroy
end on

type m_pegar from m_menu`m_pegar within m_edicion
end type

on m_pegar.create
call super::create
end on

on m_pegar.destroy
call super::destroy
end on

type m_registro from m_menu`m_registro within m_datos_academicos
end type

on m_registro.create
call super::create
end on

on m_registro.destroy
call super::destroy
end on

type m_nuevo from m_menu`m_nuevo within m_registro
end type

on m_nuevo.create
call super::create
this.visible = false
this.enabled = false
end on

on m_nuevo.destroy
call super::destroy
end on

type m_actualiza from m_menu`m_actualiza within m_registro
end type

event m_actualiza::clicked;call super::clicked;// Original Por: Carlos Melgoza
// Modificado por: Juan Campos 20-Feb-1997

long cuenta
Int  Carrera,Plan,Creditos

cuenta = long(w_datos_academicos.uo_nombre.em_cuenta.text)
  SELECT alumnos.cuenta  
    INTO :cuenta  
    FROM alumnos  
   WHERE alumnos.cuenta = :cuenta using gtr_sce;
	
if gtr_sce.sqlcode = 0 then
	// lineas anexadas
	Carrera =  w_datos_academicos.dw_academico.GetItemNumber(1,"cve_carrera")
	Plan =     w_datos_academicos.dw_academico.GetItemNumber(1,"cve_plan")
	Creditos = w_datos_academicos.dw_academico.GetItemNumber(1,"creditos_cursados")
	//*************** 
	//w_datos_academicos.dw_academico.setitem(w_datos_academicos.dw_academico.getrow(),"cuenta",cuenta)
	w_datos_academicos.dw_academico.accepttext()
	if not f_plan_activo(Carrera, Plan) then
		MessageBox("Plan Inactivo","La carrera: ["+string(Carrera)+"] con el plan: ["+string(Plan)+ "] no estan activos ")	
		return
	end if
	if w_datos_academicos.dw_academico.update(true) = 1 then
		commit using gtr_sce;	
		
		//INICIO:Replica a Internet
		transaction ltr_web
		n_transfiere_sybase_sql ln_transfiere_sybase_sql
		ln_transfiere_sybase_sql =  create n_transfiere_sybase_sql
		string ls_classname
		long ll_cuentas[]
		integer li_replica_activa, li_obten_parametros_replicacion, li_res_actualizacion
			li_obten_parametros_replicacion = ln_transfiere_sybase_sql.of_obten_parametros_replica(li_replica_activa)
			if li_replica_activa = 1 then
				w_datos_academicos.st_replica.text = 'A'
				w_datos_academicos.st_replica.BackColor =RGB(0,255,0)
				ls_classname =	w_datos_academicos.ClassName()
				ll_cuentas[1] = cuenta
				li_res_actualizacion = ln_transfiere_sybase_sql.of_actualizacion_objeto_replica(ll_cuentas, ls_classname, gtr_sce, ltr_web)
			else
				w_datos_academicos.st_replica.text = 'I'
				w_datos_academicos.st_replica.BackColor =RGB(255,0,0)
			end if
		//FIN:Replica a Internet						
				
		messagebox("Información","Se han guardado los cambios")				
		//If Not act_banderas_sersoc_integ(Cuenta,Carrera,Plan,Creditos) Then  // función anexada.
		//  Messagebox("Información","las banderas ser_social y puede_integracion No se actualizaron")		
		//End if	
	else
		rollback using gtr_sce;
		messagebox("Información","No se han guardado los cambios")	
	end if
elseif gtr_sce.sqlcode = 100 then 
	messagebox("Información","El alumno con numero de cuenta "+string(cuenta)+" no esta dado de alta.~rDebe darse de alta desde la ventana de datos generales",stopsign!)
	rollback using gtr_sce;
end if	

end event

on m_actualiza.create
call super::create
this.text = "&Actualizar Datos Academicos~tCtrl+A"
end on

on m_actualiza.destroy
call super::destroy
end on

type m_borraregistro from m_menu`m_borraregistro within m_registro
end type

event m_borraregistro::clicked;call super::clicked;string cuenta
int respuesta
cuenta = w_datos_academicos.uo_nombre.em_cuenta.text
respuesta = messagebox("Atención","Esta seguro de querer borrar los datos academicos~r del alumno "+cuenta+ ".",StopSign!,YesNo!,2)

if respuesta = 1 then
	if w_datos_academicos.dw_academico.deleterow(w_datos_academicos.dw_academico.getrow())	= 1 then
		m_datos_academicos.m_registro.m_actualiza.triggerevent(Clicked!)
		w_datos_academicos.dw_academico.insertrow(w_datos_academicos.dw_academico.getrow())	   
	else
		messagebox("Información","No se han guardado los cambios")	
	end if
elseif respuesta = 2 then
	rollback using gtr_sce;
end if

end event

on m_borraregistro.create
call super::create
this.visible = false
this.text = "&Borra Datos Academicos~tCtrl+B"
this.enabled = false
end on

on m_borraregistro.destroy
call super::destroy
end on

type m_cargaregistro from m_menu`m_cargaregistro within m_registro
end type

on m_cargaregistro.create
call super::create
end on

on m_cargaregistro.destroy
call super::destroy
end on

type m_-1 from m_menu`m_-1 within m_registro
end type

on m_-1.create
call super::create
end on

on m_-1.destroy
call super::destroy
end on

type m_primero from m_menu`m_primero within m_registro
end type

on m_primero.create
call super::create
end on

on m_primero.destroy
call super::destroy
end on

type m_anterior from m_menu`m_anterior within m_registro
end type

on m_anterior.create
call super::create
end on

on m_anterior.destroy
call super::destroy
end on

type m_siguiente from m_menu`m_siguiente within m_registro
end type

on m_siguiente.create
call super::create
end on

on m_siguiente.destroy
call super::destroy
end on

type m_ltimo from m_menu`m_ltimo within m_registro
end type

on m_ltimo.create
call super::create
end on

on m_ltimo.destroy
call super::destroy
end on

type m_-2 from m_menu`m_-2 within m_registro
end type

on m_-2.create
call super::create
this.visible = false
end on

on m_-2.destroy
call super::destroy
end on

type m_filtrar from m_menu`m_filtrar within m_registro
end type

on m_filtrar.create
call super::create
end on

on m_filtrar.destroy
call super::destroy
end on

type m_ordenar from m_menu`m_ordenar within m_registro
end type

on m_ordenar.create
call super::create
end on

on m_ordenar.destroy
call super::destroy
end on

type m_ventana from m_menu`m_ventana within m_datos_academicos
end type

on m_ventana.create
call super::create
end on

on m_ventana.destroy
call super::destroy
end on

type m_horizontal from m_menu`m_horizontal within m_ventana
end type

on m_horizontal.create
call super::create
end on

on m_horizontal.destroy
call super::destroy
end on

type m_vertical from m_menu`m_vertical within m_ventana
end type

on m_vertical.create
call super::create
end on

on m_vertical.destroy
call super::destroy
end on

type m_primerplano from m_menu`m_primerplano within m_ventana
end type

on m_primerplano.create
call super::create
end on

on m_primerplano.destroy
call super::destroy
end on

type m_cascada from m_menu`m_cascada within m_ventana
end type

on m_cascada.create
call super::create
end on

on m_cascada.destroy
call super::destroy
end on

type m_ayuda from m_menu`m_ayuda within m_datos_academicos
end type

on m_ayuda.create
call super::create
end on

on m_ayuda.destroy
call super::destroy
end on

