$PBExportHeader$f_matrix_ubound.srf
$PBExportComments$Matrices nxm. Emula a la función ubound de VB.
global type f_matrix_ubound from function_object
end type

forward prototypes
global function long f_matrix_ubound (ref any aa_matrix[], integer ai_index)
end prototypes

global function long f_matrix_ubound (ref any aa_matrix[], integer ai_index);//////////////////////////////////////////////////////////////////////////////
//
//	Function:  f_matrix_ubound
//
//	Access:  public
//
//	Arguments:
//	aa_matrix		La matriz con la que vamos a trabajar.
//	ai_index			El índice de la dimensión:
//						1 = Primera dimensión
//						2 = Segunda dimensión
//
//	Returns:
//	Long				
//
//	Description:
//	Emula el funcionamiento de la función ubound de VB para arreglos
//	bidimensionales.
//
//////////////////////////////////////////////////////////////////////////////
//
//	Revision History
//
//	Version
//	1.0   Initial version
//
//////////////////////////////////////////////////////////////////////////////
any la_tempo[]
long ll_resultado

CHOOSE CASE ai_index
	CASE 1
		ll_resultado = upperbound(aa_matrix)
	CASE 2
		la_tempo = aa_matrix[upperbound(aa_matrix)]
		ll_resultado = upperbound(la_tempo)
END CHOOSE

return ll_resultado
end function

