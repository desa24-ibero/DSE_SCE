$PBExportHeader$of_obten_maximo_folio.srf
global type of_obten_maximo_folio from function_object
end type

forward prototypes
global function long of_obten_maximo_folio (integer ai_cve_doc_control_sep)
end prototypes

global function long of_obten_maximo_folio (integer ai_cve_doc_control_sep);//of_obten_maximo_folio
//Obtiene el siguiente folio para insercion en la tabla control_sep
//Recibe	ai_cve_doc_control_sep	integer



U_DataStore lds_maximo
long	ll_maximo, ll_numero, ll_numeracion
int li_anio, li_periodo
int li_cves[4], li_tipo
choose case ai_cve_doc_control_sep
	case 1
		li_cves = {1,2}
	case 2
		li_cves = {1,2}
	case 3
		li_cves = {3}
	case else
		li_cves = {4,5,6}
end choose
	
	
lds_maximo = Create U_DataStore
lds_maximo.dataobject = "d_maximo_numero"
lds_maximo.SetTrans(gtr_sce)
lds_maximo.Retrieve(li_cves)
ll_maximo = lds_maximo.getitemnumber(1,"maximo")
if isnull(ll_maximo) then ll_maximo = 0
Destroy lds_maximo
periodo_actual(li_periodo, li_anio,gtr_sce)
if truncate(mod(ll_maximo,100000000)/1000000,0) = mod(li_anio,100) then
	ll_maximo = mod(ll_maximo,100000000) + 1
else
	ll_maximo = (mod(li_anio,100)*1000000)+1
end if
ll_maximo += (100000000*ai_cve_doc_control_sep)

ll_numero = ll_maximo


	li_tipo = truncate(ll_numero/100000000,0)
	ll_numero = mod(ll_numero,100000000)
	choose case li_tipo
		case 1
			ll_numeracion = 0
		case 2
			ll_numeracion = 0
		case 3
			ll_numeracion = 1
		case 4
			ll_numeracion = 2
		case 5
			ll_numeracion = 2
		case 6
			ll_numeracion = 2
		case else
			ll_numeracion = -1
				end choose
	if ll_numeracion = -1 then
		ll_numero = (li_tipo*100000000) + ll_numero - 1000000000
	else
		ll_numero += (ll_numeracion*100000000)
	end if


return ll_numero


end function

