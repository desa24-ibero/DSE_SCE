$PBExportHeader$f_establece_estatus_tramite.srf
global type f_establece_estatus_tramite from function_object
end type

forward prototypes
global function long f_establece_estatus_tramite (long al_cuenta, long al_cve_carrera, long al_cve_plan, integer ai_cve_tramite, datetime adttm_fecha, integer ai_cve_estado, integer ai_cve_sub_estado)
end prototypes

global function long f_establece_estatus_tramite (long al_cuenta, long al_cve_carrera, long al_cve_plan, integer ai_cve_tramite, datetime adttm_fecha, integer ai_cve_estado, integer ai_cve_sub_estado);//f_establece_estatus_tramite
//Obtiene el numero de tramites solicitados
//Recibe			al_cuenta			long
//					al_cve_carrera		long
//					al_cve_plan			long
//					ai_cve_tramite		int
//					adttm_fecha			datetime
//					ai_cve_estado		int
//					ai_cve_sub_estado	int
//Devuelve		long

integer li_codigo_sql
string ls_mensaje_sql, ls_nivel,ls_grado
long ll_num_tramites, ll_null
integer li_parcial, li_entrada_arch, li_en_archivo, li_cve_estado_titulo
integer li_dia, li_mes, li_anio, li_hora, li_minuto, li_segundo
date ldt_fecha
time ltm_fecha

ldt_fecha = date(adttm_fecha)
ltm_fecha = time(adttm_fecha)

li_dia = day(ldt_fecha)
li_mes = month(ldt_fecha)
li_anio = year(ldt_fecha)

li_hora = hour(ltm_fecha)
li_minuto = minute(ltm_fecha)
li_segundo = second(ltm_fecha)

SetNull(ll_null)

		UPDATE estado_alumno_tramite
		SET 	cve_estado = :ai_cve_estado,
		 		cve_sub_estado = :ai_cve_sub_estado
		WHERE cuenta = :al_cuenta
		AND cve_carrera = :al_cve_carrera
		AND cve_plan = :al_cve_plan
		AND cve_tramite = :ai_cve_tramite
		AND datepart(ss,fecha) = :li_segundo
		AND datepart(mi,fecha) = :li_minuto
		AND datepart(hh,fecha) = :li_hora
		AND datepart(dd,fecha) = :li_dia
		AND datepart(mm,fecha) = :li_mes
		AND datepart(yy,fecha) = :li_anio
		USING gtr_sce;

	li_codigo_sql = gtr_sce.SqlCode
	ls_mensaje_sql = gtr_sce.SqlErrText

//Si el registro no existe
	if li_codigo_sql = 100 then
		MessageBox("Error al actualizar (100) Cuenta ["+string(al_cuenta)+"] Carrera["+string(al_cve_carrera)+"] Plan["+string(al_cve_plan)+"]", ls_mensaje_sql,StopSign!)
//Si hubo error al actualizar el registro
	elseif li_codigo_sql = -1 then
		ROLLBACK USING gtr_sce;
		MessageBox("Error al actualizar (-1) Cuenta ["+string(al_cuenta)+"] Carrera["+string(al_cve_carrera)+"] Plan["+string(al_cve_plan)+"]", ls_mensaje_sql,StopSign!)
		return  -1
//Si se actualizo exitosamente
	elseif li_codigo_sql = 0 then
		COMMIT USING gtr_sce;
		return  0
	end if

RETURN 0

end function

