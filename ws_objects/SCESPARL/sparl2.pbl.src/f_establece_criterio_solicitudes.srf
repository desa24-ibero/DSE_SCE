$PBExportHeader$f_establece_criterio_solicitudes.srf
global type f_establece_criterio_solicitudes from function_object
end type

forward prototypes
global function long f_establece_criterio_solicitudes (string as_cve_criterio, integer ai_periodo, integer ai_anio)
end prototypes

global function long f_establece_criterio_solicitudes (string as_cve_criterio, integer ai_periodo, integer ai_anio);//NOMBRE
//f_establece_criterio_solicitudes
//
//REGRESA
//long
//
//RECIBE
//as_cve_criterio			string
//ai_periodo				int
//ai_anio					int

integer li_codigo_sql
string ls_criterio, ls_mensaje_sql
long	ll_cuenta, ll_rows


DELETE FROM criterio_folio_solicitudes
WHERE periodo = :ai_periodo
AND	anio = :ai_anio
USING gtr_sce;

li_codigo_sql =gtr_sce.SqlCode
ls_mensaje_sql =gtr_sce.SqlErrText
ll_rows =gtr_sce.SqlNRows

if li_codigo_sql = -1 then
	MessageBox("Error al eliminar criterio_folio_solicitudes", ls_mensaje_sql)	
	return li_codigo_sql	
end if


INSERT INTO	criterio_folio_solicitudes
		 (cve_criterio, 		periodo, 	anio)
VALUES (:as_cve_criterio, :ai_periodo, :ai_anio)
USING gtr_sce;

li_codigo_sql =gtr_sce.SqlCode
ls_mensaje_sql =gtr_sce.SqlErrText
ll_rows =gtr_sce.SqlNRows

if li_codigo_sql = -1 then
	MessageBox("Error al insertar en criterio_folio_solicitudes", ls_mensaje_sql)	
	ll_rows = li_codigo_sql	
end if

return li_codigo_sql
	

end function

