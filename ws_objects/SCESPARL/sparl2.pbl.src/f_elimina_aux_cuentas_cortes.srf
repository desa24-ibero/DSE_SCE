$PBExportHeader$f_elimina_aux_cuentas_cortes.srf
global type f_elimina_aux_cuentas_cortes from function_object
end type

forward prototypes
global function long f_elimina_aux_cuentas_cortes (integer ai_periodo, integer ai_anio)
end prototypes

global function long f_elimina_aux_cuentas_cortes (integer ai_periodo, integer ai_anio);//NOMBRE
//f_elimina_aux_cuentas_cortes
//
//REGRESA
//long
// 
//RECIBE	
//ai_periodo				int
//ai_anio					int


integer li_codigo_sql, li_codigo_sql2, li_periodo_primavera
string ls_criterio, ls_mensaje_sql, ls_mensaje_sql2, ls_calificacion_anterior 
long	ll_cuenta, ll_rows

//Si el periodo es Otoño, las cuentas cortes deben ser de Verano más de Primavera para asignación de horarios
IF ai_periodo = 2 THEN
	li_periodo_primavera = 0	

	DELETE FROM cuentas_cortes
	WHERE cuentas_cortes.periodo = :li_periodo_primavera
	AND cuentas_cortes.anio = :ai_anio
	USING gtr_sce;

	li_codigo_sql =gtr_sce.SqlCode
	ls_mensaje_sql =gtr_sce.SqlErrText

//Hubo algún problema al realizar la inserción
	if li_codigo_sql = -1 then
		ROLLBACK USING gtr_sce;
		MessageBox("Error al eliminar en cuentas_cortes", ls_mensaje_sql)	
		return li_codigo_sql
	elseif li_codigo_sql = 100 then
		ROLLBACK USING gtr_sce;
		MessageBox("No existen registros a eliminar en cuentas_cortes", ls_mensaje_sql)	
		return li_codigo_sql		
	end if

	if li_codigo_sql = 0 then
		COMMIT USING gtr_sce;
		return li_codigo_sql		
	end if

END IF


return li_codigo_sql
	

end function

