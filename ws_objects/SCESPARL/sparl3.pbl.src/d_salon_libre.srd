$PBExportHeader$d_salon_libre.srd
release 12;
datawindow(units=0 timer_interval=0 color=16777215 brushmode=0 transparency=0 gradient.angle=0 gradient.color=8421504 gradient.focus=0 gradient.repetition.count=0 gradient.repetition.length=100 gradient.repetition.mode=0 gradient.scale=100 gradient.spread=100 gradient.transparency=0 picture.blur=0 picture.clip.bottom=0 picture.clip.left=0 picture.clip.right=0 picture.clip.top=0 picture.mode=0 picture.scale.x=100 picture.scale.y=100 picture.transparency=0 processing=0 HTMLDW=no print.printername="" print.documentname="" print.orientation = 0 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.canusedefaultprinter=yes print.prompt=no print.buttons=no print.preview.buttons=no print.cliptext=no print.overrideprintjob=no print.collate=yes print.background=no print.preview.background=no print.preview.outline=yes hidegrayline=no showbackcoloronxp=no picture.file="" )
header(height=72 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
summary(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
footer(height=0 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
detail(height=80 color="536870912" transparency="0" gradient.color="8421504" gradient.transparency="0" gradient.angle="0" brushmode="0" gradient.repetition.mode="0" gradient.repetition.count="0" gradient.repetition.length="100" gradient.focus="0" gradient.scale="100" gradient.spread="100" )
table(column=(type=long updatewhereclause=yes name=cve_mat dbname="cve_mat" )
 retrieve="SELECT	horario.cve_mat  
FROM	horario,
		grupos
WHERE	( horario.cve_dia = :cve_dia ) AND  
		( horario.cve_salon LIKE :cve_salon ) AND
		(	
			( 
				( horario.anio		= :anio ) AND
				( horario.periodo	= :periodo ) AND
				( horario.anio		= grupos.anio ) AND
				( horario.periodo	= grupos.periodo ) AND
				( horario.cve_mat	= grupos.cve_mat ) AND
				( horario.gpo		= grupos.gpo )
			)
			OR 
			(
				( 
					horario.anio IN ( SELECT anio from periodos_por_procesos where cve_proceso = 0 and tipo_periodo <> (SELECT tipo FROM periodo WHERE periodo = :periodo ) ) 
				)
				AND
				( 
					horario.periodo IN ( SELECT periodo from periodos_por_procesos where cve_proceso = 0 and tipo_periodo <> (SELECT tipo FROM periodo WHERE periodo = :periodo ) ) 
				)
			)
		)
		
		-- Oscar Sánchez 30-Enero-2018 (Validación de fechas de bloques)
		AND
		(	-- Validaciones de la fecha del bloque (rango de fechas en que se imparte el bloque) ...
			(	-- Verifica si la fecha inicial del bloque del nuevo grupo está dentro de la fecha inicial y final del bloque de una materia inscrita ...
				:grupos_fecha_inicio BETWEEN grupos.fecha_inicio AND grupos.fecha_fin 
			) or 
			(	-- Verifica si la fecha final del bloque del nuevo grupo está dentro de la fecha inicial y final del bloque de una materia inscrita ...
				:grupos_fecha_fin BETWEEN grupos.fecha_inicio AND grupos.fecha_fin 
			) or
			(	-- Verifica si las fechas inicial y final del nuevo grupo son iguales a las fechas inicial y final del bloque de una materia inscrita ...
				:grupos_fecha_inicio = grupos.fecha_inicio AND :grupos_fecha_fin = grupos.fecha_fin 
			) or
			(	-- Verifica que el rango de fechas del bloque del nuevo grupo comience antes y termine despues que el rango de fechas del bloque de una materia inscrita ...
				:grupos_fecha_inicio < grupos.fecha_inicio AND :grupos_fecha_fin > grupos.fecha_fin 
			)
		)
		-- Oscar Sánchez 30-Enero (Validación de fechas de bloques)
										
		AND  
		(
			((horario.hora_final  <= :hfin)AND(horario.hora_final  > :hini)) OR 
			((horario.hora_inicio >= :hini)AND(horario.hora_inicio < :hfin)) OR
			((horario.hora_inicio <= :hini)AND(horario.hora_final >= :hfin))
		)



/*	-- Oscar Sánchez 30-Enero (Validación de fechas para grupos modulares)
  SELECT horario.cve_mat  
    FROM horario  
   WHERE ( horario.cve_dia = :cve_dia ) AND  
         ( horario.cve_salon LIKE :cve_salon ) AND
		(	
			( ( horario.anio = :anio ) AND ( horario.periodo = :periodo ) ) 
			OR 
			(
				( horario.anio IN(SELECT      anio from periodos_por_procesos where cve_proceso = 0 and tipo_periodo <> (SELECT tipo FROM periodo WHERE periodo = :periodo) ) )
				AND
				( horario.periodo IN(SELECT periodo from periodos_por_procesos where cve_proceso = 0 and tipo_periodo <> (SELECT tipo FROM periodo WHERE periodo = :periodo) ) )				
			)

		)
		AND  
		(
			((horario.hora_final  <= :hfin)AND(horario.hora_final  > :hini)) OR 
		 	((horario.hora_inicio >= :hini)AND(horario.hora_inicio < :hfin)) OR
		 	((horario.hora_inicio <= :hini)AND(horario.hora_final >= :hfin))
		)
*/


/*  SELECT horario.cve_mat  
    FROM horario  
   WHERE ( horario.cve_dia = :cve_dia ) AND  
         ( horario.cve_salon LIKE :cve_salon ) AND
			( horario.anio = :anio ) AND
			( horario.periodo = :periodo ) AND  
			(((horario.hora_final  <= :hfin)AND(horario.hora_final  > :hini)) OR 
			 ((horario.hora_inicio >= :hini)AND(horario.hora_inicio < :hfin)) OR
			 ((horario.hora_inicio <= :hini)AND(horario.hora_final >= :hfin)))
*/" arguments=(("anio", number),("periodo", number),("hini", number),("hfin", number),("cve_dia", number),("cve_salon", string),("grupos_fecha_inicio", date),("grupos_fecha_fin", date)) )
text(band=header alignment="2" text="Cve Mat" border="0" color="0" x="5" y="4" height="64" width="352" html.valueishtml="0"  name=cve_mat_t visible="1"  font.face="Arial" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
column(band=detail id=1 alignment="1" tabsequence=32766 border="0" color="0" x="5" y="4" height="76" width="352" format="[general]" html.valueishtml="0"  name=cve_mat visible="1" edit.limit=0 edit.case=any edit.autoselect=yes edit.autohscroll=yes  font.face="Arial" font.height="-10" font.weight="400"  font.family="2" font.pitch="2" font.charset="0" background.mode="1" background.color="536870912" background.transparency="0" background.gradient.color="8421504" background.gradient.transparency="0" background.gradient.angle="0" background.brushmode="0" background.gradient.repetition.mode="0" background.gradient.repetition.count="0" background.gradient.repetition.length="100" background.gradient.focus="0" background.gradient.scale="100" background.gradient.spread="100" tooltip.backcolor="134217752" tooltip.delay.initial="0" tooltip.delay.visible="32000" tooltip.enabled="0" tooltip.hasclosebutton="0" tooltip.icon="0" tooltip.isbubble="0" tooltip.maxwidth="0" tooltip.textcolor="134217751" tooltip.transparency="0" transparency="0" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" encodeselflinkargs="1" netscapelayers="0" pagingmethod=0 generatedddwframes="1" )
xhtmlgen() cssgen(sessionspecific="0" )
xmlgen(inline="0" )
xsltgen()
jsgen()
export.xml(headgroups="1" includewhitespace="0" metadatatype=0 savemetadata=0 )
import.xml()
export.pdf(method=0 distill.custompostscript="0" xslfop.print="0" )
export.xhtml()
 