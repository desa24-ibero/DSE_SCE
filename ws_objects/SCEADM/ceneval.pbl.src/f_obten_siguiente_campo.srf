$PBExportHeader$f_obten_siguiente_campo.srf
$PBExportComments$Funcion utilizada en el proceso de recepcion que en la lectura del archivo regresa el siguiente campo a una variable string
global type f_obten_siguiente_campo from function_object
end type

forward prototypes
global function string f_obten_siguiente_campo (ref string as_linea, ref integer ai_indice)
end prototypes

global function string f_obten_siguiente_campo (ref string as_linea, ref integer ai_indice);/*
Esta función se utiliza en el proceso de carga automática del disco
de CENEVAL para obtener el campo siguiente a partir de una línea de caracteres
y un índice.

NOTA:
	En este código se supone que el separador utilizado es el tabulador

PARAMETROS:
	as_linea			string 	reference
	ai_indice		integer	reference
	
REGRESA:
	La Cadena correspondiente al siguiente campo

AUTOR:
	Antonio Pica Ruiz

FECHA:
	9 de Abril de 1999
	
*/

string ls_campo_actual 
integer li_indice_menos_1, li_posicion_coma, li_lon_campo, li_lon_campo_menos_uno

ls_campo_actual = ""

as_linea= Mid(as_linea, ai_indice + 1)


//Obtiene la posicion en que se encuentra el siguiente separador (tabulador)
ai_indice= Pos (as_linea, "	")

li_indice_menos_1= ai_indice - 1
//Obtiene el substring de la línea de su posición inicial hasta una posición 
//antes del tabulador
ls_campo_actual = Left (as_linea, li_indice_menos_1)

li_posicion_coma= Pos (ls_campo_actual, ",")

if li_posicion_coma > 0 then
	ls_campo_actual = mid(ls_campo_actual, 2)
	li_lon_campo = len(ls_campo_actual)
	li_lon_campo_menos_uno =li_lon_campo - 1
	ls_campo_actual = mid(ls_campo_actual, 1, li_lon_campo_menos_uno)
end if

return ls_campo_actual


end function

