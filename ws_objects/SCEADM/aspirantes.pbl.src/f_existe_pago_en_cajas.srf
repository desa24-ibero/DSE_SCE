$PBExportHeader$f_existe_pago_en_cajas.srf
global type f_existe_pago_en_cajas from function_object
end type

forward prototypes
global function integer f_existe_pago_en_cajas (long al_folio, integer ai_clv_ver, integer ai_clv_per, integer ai_anio)
end prototypes

global function integer f_existe_pago_en_cajas (long al_folio, integer ai_clv_ver, integer ai_clv_per, integer ai_anio);//f_existe_pago_en_cajas
//al_folio_test_vocacional
//al_folio				long
//ai_clv_ver			integer
//ai_clv_per			integer
//ai_anio				integer

long ll_folio, ll_num_movimientos
integer li_clv_ver, li_clv_per, li_anio
int li_codigo_sql, li_SQLNRows
string ls_mensaje


	select count(bita.folio) 
	INTO	:ll_num_movimientos
	from bit_aspiran bita, bandera ban, aspiran asp
	where asp.anio = :ai_anio
	and asp.clv_per = :ai_clv_per
	and asp.clv_ver = :ai_clv_ver
	and asp.folio = :al_folio
	and bita.folio = asp.folio
	and bita.bandera = ban.bandera
	and bita.usuario like '%caj%'
	and bita.bandera = 2
	and bita.anterior = 0
	and bita.actual = 1
	USING gtr_sadm;
	li_codigo_sql = gtr_sadm.SqlCode
	ls_mensaje = gtr_sadm.SqlErrText
	li_SQLNRows = gtr_sadm.SQLNRows	

	IF li_codigo_sql = -1 THEN
		MessageBox("Error al consultar bit_aspiran", ls_mensaje, StopSign!)	
	END IF

RETURN ll_num_movimientos

end function

