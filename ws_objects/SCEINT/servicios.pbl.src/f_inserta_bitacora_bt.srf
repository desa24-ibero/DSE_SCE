$PBExportHeader$f_inserta_bitacora_bt.srf
global type f_inserta_bitacora_bt from function_object
end type

forward prototypes
global function integer f_inserta_bitacora_bt (long al_cuenta, long al_cve_condicion, ref n_tr atr_transaction)
end prototypes

global function integer f_inserta_bitacora_bt (long al_cuenta, long al_cve_condicion, ref n_tr atr_transaction);//f_inserta_bitacora_bt
//
//Recibe al_cuenta			long
//			al_cve_condicion	long
//			atr_transaction	n_tr
//

//Esta funcion inserta en bitácora las materias dadas de baja

integer  li_codigo_sql, li_cupo, li_inscritos, li_cve_profesor, li_periodo, li_anio, li_cve_condicion
string ls_mensaje_sql, ls_gpo, ls_FechaHora, ls_NomUsuario, ls_digito
long ll_cuenta, ll_num_rows, ll_row_actual
uds_datastore luds_datastore
long ll_cve_mat

ls_digito = obten_digito(al_cuenta)

ls_FechaHora     = fecha_ingles_servidor(atr_transaction)
ls_NomUsuario    = gtr_sce.logid

If IsNull(ls_NomUsuario) Then
  ls_NomUsuario = gs_usuario
End If


luds_datastore = create uds_datastore
luds_datastore.dataobject = 'd_materias_inscritas_bt'
luds_datastore.SetTransObject(atr_transaction)
ll_num_rows = luds_datastore.Retrieve(al_cuenta)

for ll_row_actual=1 to ll_num_rows	
	//Lee los valores de las materias del alumno
	li_periodo			= luds_datastore.GetItemNumber(ll_row_actual, 'mat_inscritas_periodo')
	li_anio				= luds_datastore.GetItemNumber(ll_row_actual, 'mat_inscritas_anio')
	ll_cve_mat			= luds_datastore.GetItemNumber(ll_row_actual, 'mat_inscritas_cve_mat')
	ls_gpo				= luds_datastore.GetItemString(ll_row_actual, 'mat_inscritas_gpo')
	li_cve_condicion	= luds_datastore.GetItemNumber(ll_row_actual, 'mat_inscritas_cve_condicion')

	//Inserta los valores en la bitácora de bajas
 Insert Into ui_bibaj 
 values (:al_cuenta,
 			:ls_digito,
			:ll_cve_mat,
			:ls_gpo,
			:li_periodo,
			:li_anio,
			:al_cve_condicion,
			:li_cve_condicion,
			:ls_Fechahora,
			:ls_Nomusuario)	
	USING atr_transaction;

	li_codigo_sql = atr_transaction.SqlCode
	ls_mensaje_sql = atr_transaction.SqlErrText

	if li_codigo_sql = -1 then
		ROLLBACK USING atr_transaction;
		MessageBox("Error al actualizar la condicion en ui_bibaj", ls_mensaje_sql)
		return li_codigo_sql
	end if	
next

if ll_row_actual>= 1 then
	COMMIT USING atr_transaction;
end if
return li_codigo_sql

end function

