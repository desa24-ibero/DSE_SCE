$PBExportHeader$f_lee_codigo_acta_anterior.srf
global type f_lee_codigo_acta_anterior from function_object
end type

forward prototypes
global function integer f_lee_codigo_acta_anterior (string as_codigo_barras, ref integer al_cve_mat, ref string as_gpo, ref integer ai_periodo, ref integer ai_anio, ref integer ai_no_acta, ref string as_nivel)
end prototypes

global function integer f_lee_codigo_acta_anterior (string as_codigo_barras, ref integer al_cve_mat, ref string as_gpo, ref integer ai_periodo, ref integer ai_anio, ref integer ai_no_acta, ref string as_nivel);//f_lee_codigo_acta
//Recibe 
//			as_codigo_barras		string
//Devuelve:
//	integer -1  Código Inválido
//			   0	Lectura Exitosa
//FORMATO DE CODIGO ESPERADO
//*MMMMMG_PAAAANNNNG*
//Descripción del código de 19 caracteres
//       POSICION   DESCRIPCIÓN
//*             1   INICIO DEL CODIGO DE BARRAS
//MMMMM 	     2-6   cve_mat de la materia correspondiente de uno a cinco dígitos
//G_ 		     7-8   gpo de la materia correspondiente, si es de una sola letra, el segundo caracter es el guion bajo, de lo contrario, las 2 posiciones
//P  		       9   periodo correspondiente (0-Primavera/1-Verano/2-Otoño)
//AAAA  	   10-13   año correspondiente en cuatro dígitos
//NNNN      14-17   no_acta Número de acta asignado en cuatro dígitos
//G		      18   nivel del grado correspondiente (L-Licenciatura/P-Posgrado)
//*            19   FIN DEL CODIGO DE BARRAS
//
//DEVUELVE:
//		al_cve_mat	long
//		as_gpo		string
//		ai_periodo	integer
//		ai_anio		integer
//		ai_no_acta		integer
//		as_nivel		string
		

long		   ll_cve_mat	
string		ls_gpo		
integer		li_periodo	
integer		li_anio		
integer		li_no_acta		
string		ls_nivel		
string ls_cve_mat, ls_periodo, ls_anio, ls_no_acta, ls_asterisco_inicial, ls_asterisco_final


if len(as_codigo_barras)<>19 then
	MessageBox("Código Incorrecto","El código leido no corresponde a un código válido",StopSign!)
	return -1
end if

ls_asterisco_inicial = mid(as_codigo_barras,1,1)
ls_cve_mat = mid(as_codigo_barras,2,5)
ls_gpo     = mid(as_codigo_barras,7,2)

if pos(ls_gpo,'_')>0 then
	ls_gpo = mid(ls_gpo,1,1)
end if

ls_periodo = mid(as_codigo_barras,9,1)
ls_anio    = mid(as_codigo_barras,10,4)
ls_no_acta = mid(as_codigo_barras,14,4)
ls_nivel   = mid(as_codigo_barras,18,1)

ls_asterisco_final = mid(as_codigo_barras,19,1)

if not isnumber(ls_cve_mat) then
	MessageBox("Código Incorrecto","El código de la materia leido ["+ls_cve_mat+"] no corresponde a un código válido",StopSign!)
	return -1	
end if
ll_cve_mat = long(ls_cve_mat)

if not f_grupo_valido(ls_gpo) then
	MessageBox("Código Incorrecto","El código del grupo leido ["+ls_gpo+"] no corresponde a un código válido",StopSign!)
	return -1	
end if

if not isnumber(ls_periodo) then
	MessageBox("Código Incorrecto","El código del periodo leido ["+ls_periodo+"] no corresponde a un código válido",StopSign!)
	return -1	
end if

li_periodo = integer(ls_periodo)
if li_periodo <0 or li_periodo>2 then
	MessageBox("Código Incorrecto","El código del periodo leido ["+ls_periodo+"] no corresponde a un código válido",StopSign!)
	return -1	
end if

if not isnumber(ls_anio) then
	MessageBox("Código Incorrecto","El código del año leido ["+ls_anio+"] no corresponde a un código válido",StopSign!)
	return -1	
end if
li_anio = integer(li_anio)
		
if not isnumber(ls_no_acta) then
	MessageBox("Código Incorrecto","El código del numero de acta leido ["+ls_no_acta+"] no corresponde a un código válido",StopSign!)
	return -1	
end if		
li_no_acta = integer(ls_no_acta)	

if ls_nivel <>'L' or ls_nivel<>'P' then
	MessageBox("Código Incorrecto","El código del nivel leido ["+ls_nivel+"] no corresponde a un código válido",StopSign!)
	return -1	
end if

al_cve_mat	= ll_cve_mat
as_gpo		= ls_gpo
ai_periodo	= li_periodo
ai_anio		= li_anio
ai_no_acta	= li_no_acta
as_nivel		= ls_nivel

RETURN 0
end function

