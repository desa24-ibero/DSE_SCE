$PBExportHeader$f_obten_prerreq_falt.srf
global type f_obten_prerreq_falt from function_object
end type

forward prototypes
global function integer f_obten_prerreq_falt (long al_cve_mat, integer ai_cve_carrera, integer ai_cve_plan)
end prototypes

global function integer f_obten_prerreq_falt (long al_cve_mat, integer ai_cve_carrera, integer ai_cve_plan);integer li_cve_mat, li_cve_prerreq
string ls_enlace, ls_materias_materia
long ll_num_rows, li_row_actual
integer array_cve_prerreq[]
string array_materia[]
string array_enlace[]

DataStore lds_prerrequisito
lds_prerrequisito = Create DataStore
lds_prerrequisito.DataObject = "dw_prerrequisitos"
lds_prerrequisito.SetTransObject(gtr_sce)
ll_num_rows = lds_prerrequisito.Retrieve(al_cve_mat, ai_cve_carrera, ai_cve_plan)

for li_row_actual = 1 to ll_num_rows
	li_cve_prerreq= lds_prerrequisito.GetItemNumber(li_row_actual, "cve_prerreq")
	ls_materias_materia= lds_prerrequisito.GetItemString(li_row_actual, "materias_materia")
	ls_enlace= lds_prerrequisito.GetItemString(li_row_actual, "enlace")
	array_cve_prerreq[li_row_actual] = li_cve_prerreq
	array_materia[li_row_actual] = ls_materias_materia
	array_enlace[li_row_actual] = ls_enlace
next

for li_row_actual = 1 to ll_num_rows
	
	li_cve_prerreq= array_cve_prerreq[li_row_actual] 
	ls_materias_materia= array_materia[li_row_actual]
	ls_enlace= array_enlace[li_row_actual] 
	
next



return 0


end function

