//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.8800
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.3038.
// 
namespace WebService {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ws_cambio_password_upd.cfcSoapBinding", Namespace="http://DefaultNamespace")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(QueryBean))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CFCInvocationException))]
    public partial class ws_cambio_password_updService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback get_datosOperationCompleted;
        
        private System.Threading.SendOrPostCallback upd_password_updOperationCompleted;
        
        private System.Threading.SendOrPostCallback upd_ipVentanillaOperationCompleted;
        
        /// <remarks/>
        public ws_cambio_password_updService() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["EndpointURL"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://enlinea.ibero.mx/ws_enlineaid9000-1xxx/ws_cambio_password_upd.cfc";
            }
        }
        
        /// <remarks/>
        public event get_datosCompletedEventHandler get_datosCompleted;
        
        /// <remarks/>
        public event upd_password_updCompletedEventHandler upd_password_updCompleted;
        
        /// <remarks/>
        public event upd_ipVentanillaCompletedEventHandler upd_ipVentanillaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://DefaultNamespace")]
        [return: System.Xml.Serialization.SoapElementAttribute("get_datosReturn")]
        public Map get_datos(double cuenta, string digitover) {
            object[] results = this.Invoke("get_datos", new object[] {
                        cuenta,
                        digitover});
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_datos(double cuenta, string digitover, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_datos", new object[] {
                        cuenta,
                        digitover}, callback, asyncState);
        }
        
        /// <remarks/>
        public Map Endget_datos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public void get_datosAsync(double cuenta, string digitover) {
            this.get_datosAsync(cuenta, digitover, null);
        }
        
        /// <remarks/>
        public void get_datosAsync(double cuenta, string digitover, object userState) {
            if ((this.get_datosOperationCompleted == null)) {
                this.get_datosOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_datosOperationCompleted);
            }
            this.InvokeAsync("get_datos", new object[] {
                        cuenta,
                        digitover}, this.get_datosOperationCompleted, userState);
        }
        
        private void Onget_datosOperationCompleted(object arg) {
            if ((this.get_datosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_datosCompleted(this, new get_datosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://DefaultNamespace")]
        [return: System.Xml.Serialization.SoapElementAttribute("upd_password_updReturn")]
        public string upd_password_upd(double usuario, string contraseniaNueva, string confiNueva, string passAnt, string emailAlt, string email, double tipForm, string emailconf, string digitover, string peticion, string referencia, string nip6) {
            object[] results = this.Invoke("upd_password_upd", new object[] {
                        usuario,
                        contraseniaNueva,
                        confiNueva,
                        passAnt,
                        emailAlt,
                        email,
                        tipForm,
                        emailconf,
                        digitover,
                        peticion,
                        referencia,
                        nip6});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupd_password_upd(double usuario, string contraseniaNueva, string confiNueva, string passAnt, string emailAlt, string email, double tipForm, string emailconf, string digitover, string peticion, string referencia, string nip6, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("upd_password_upd", new object[] {
                        usuario,
                        contraseniaNueva,
                        confiNueva,
                        passAnt,
                        emailAlt,
                        email,
                        tipForm,
                        emailconf,
                        digitover,
                        peticion,
                        referencia,
                        nip6}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endupd_password_upd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upd_password_updAsync(double usuario, string contraseniaNueva, string confiNueva, string passAnt, string emailAlt, string email, double tipForm, string emailconf, string digitover, string peticion, string referencia, string nip6) {
            this.upd_password_updAsync(usuario, contraseniaNueva, confiNueva, passAnt, emailAlt, email, tipForm, emailconf, digitover, peticion, referencia, nip6, null);
        }
        
        /// <remarks/>
        public void upd_password_updAsync(double usuario, string contraseniaNueva, string confiNueva, string passAnt, string emailAlt, string email, double tipForm, string emailconf, string digitover, string peticion, string referencia, string nip6, object userState) {
            if ((this.upd_password_updOperationCompleted == null)) {
                this.upd_password_updOperationCompleted = new System.Threading.SendOrPostCallback(this.Onupd_password_updOperationCompleted);
            }
            this.InvokeAsync("upd_password_upd", new object[] {
                        usuario,
                        contraseniaNueva,
                        confiNueva,
                        passAnt,
                        emailAlt,
                        email,
                        tipForm,
                        emailconf,
                        digitover,
                        peticion,
                        referencia,
                        nip6}, this.upd_password_updOperationCompleted, userState);
        }
        
        private void Onupd_password_updOperationCompleted(object arg) {
            if ((this.upd_password_updCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upd_password_updCompleted(this, new upd_password_updCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://DefaultNamespace")]
        [return: System.Xml.Serialization.SoapElementAttribute("upd_ipVentanillaReturn")]
        public string upd_ipVentanilla(double cuenta, string peticion, string referencia) {
            object[] results = this.Invoke("upd_ipVentanilla", new object[] {
                        cuenta,
                        peticion,
                        referencia});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupd_ipVentanilla(double cuenta, string peticion, string referencia, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("upd_ipVentanilla", new object[] {
                        cuenta,
                        peticion,
                        referencia}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endupd_ipVentanilla(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upd_ipVentanillaAsync(double cuenta, string peticion, string referencia) {
            this.upd_ipVentanillaAsync(cuenta, peticion, referencia, null);
        }
        
        /// <remarks/>
        public void upd_ipVentanillaAsync(double cuenta, string peticion, string referencia, object userState) {
            if ((this.upd_ipVentanillaOperationCompleted == null)) {
                this.upd_ipVentanillaOperationCompleted = new System.Threading.SendOrPostCallback(this.Onupd_ipVentanillaOperationCompleted);
            }
            this.InvokeAsync("upd_ipVentanilla", new object[] {
                        cuenta,
                        peticion,
                        referencia}, this.upd_ipVentanillaOperationCompleted, userState);
        }
        
        private void Onupd_ipVentanillaOperationCompleted(object arg) {
            if ((this.upd_ipVentanillaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upd_ipVentanillaCompleted(this, new upd_ipVentanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map {
        
        /// <comentarios/>
        public mapItem[] item;
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem {
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value;
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class QueryBean {
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] columnList;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object[] data;
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class CFCInvocationException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_datosCompletedEventHandler(object sender, get_datosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_datosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_datosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Map Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Map)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void upd_password_updCompletedEventHandler(object sender, upd_password_updCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upd_password_updCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upd_password_updCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void upd_ipVentanillaCompletedEventHandler(object sender, upd_ipVentanillaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upd_ipVentanillaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upd_ipVentanillaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
